{"version":3,"file":"static/js/794.107658c0.chunk.js","mappings":"2LAEe,SAASA,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,eAAgBC,EAAQ,EAARA,KACjE,OACE,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMN,GAA1C,SACGE,GAAkBC,OAK5B,C,wJCLc,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMV,GAAWW,EAAAA,EAAAA,MACjB,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcP,GAAU,OAAIO,EAAKC,SAAjC,IACLC,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAYD,EAAME,QAAtB,IACXC,QAAQV,GAAa,GACzB,GAAE,KAGD,iCACE,wBAAI,mBAEHD,IACC,SAAC,KAAD,CACEY,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAGZtB,GACCA,EAAOuB,KAAI,YAAmC,IAAhC9B,EAA+B,EAA/BA,eAAgBD,EAAe,EAAfA,GAAIE,EAAW,EAAXA,KAChC,OACE,SAACJ,EAAA,EAAD,CAEEC,SAAUA,EACVE,eAAgBA,EAChBC,KAAMA,EACNF,GAAIA,GAJCA,EAOV,MAGR,C,mKChDKgC,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMnB,EAAmB,WACvB,OAAOmB,EAAAA,EAAAA,IAAA,oCAAuCD,GAC/C,EAEKE,EAAa,SAAAC,GACjB,OAAOF,EAAAA,EAAAA,IAAA,6BACiBE,EADjB,8DAC4EH,GAEpF,EAEKI,EAAiB,SAAApC,GACrB,OAAOiC,EAAAA,EAAAA,IAAA,gBAAmBjC,EAAnB,mCAAgDgC,GACxD,EAMKK,EAAmB,SAAArC,GACvB,OAAOiC,EAAAA,EAAAA,IAAA,gBAAmBjC,EAAnB,kDAA+DgC,GACvE,EAEKM,EAAY,SAAAtC,GAChB,OAAOiC,EAAAA,EAAAA,IAAA,gBAAmBjC,EAAnB,2CAAwDgC,GAChE,C","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function MoviesList({ location, id, original_title, name }) {\n  return (\n    <ul>\n      <li>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          {original_title || name}\n        </Link>\n      </li>\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { fetchTrandMovies } from '../../src/services/API';\nimport { useLocation } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchTrandMovies()\n      .then(({ data }) => setMovies([...data.results]))\n      .catch(error => toast.error(error.message))\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending today</h1>\n\n      {isLoading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      {movies &&\n        movies.map(({ original_title, id, name }) => {\n          return (\n            <MoviesList\n              key={id}\n              location={location}\n              original_title={original_title}\n              name={name}\n              id={id}\n            />\n          );\n        })}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '1676e9bd6d1e52f74048e3da15b70e63';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrandMovies = () => {\n  return axios.get(`/trending/all/day?api_key=${KEY}`);\n};\n\nconst fetchMovie = query => {\n  return axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${KEY}`\n  );\n};\n\nconst fetchMovieByID = id => {\n  return axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n};\n\nconst fetchMovieCredits = id => {\n  return axios.get(`/movie/${id}/credits?language=en-US&api_key=${KEY}`);\n};\n\nconst fetchMovieRewies = id => {\n  return axios.get(`movie/${id}/reviews?language=en-US&page=1&api_key=${KEY}`);\n};\n\nconst fetchCast = id => {\n  return axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n};\n\nexport {\n  fetchTrandMovies,\n  fetchMovie,\n  fetchMovieByID,\n  fetchMovieCredits,\n  fetchMovieRewies,\n  fetchCast,\n};\n"],"names":["MoviesList","location","id","original_title","name","to","state","from","Home","useState","movies","setMovies","useLocation","isLoading","setIsLoading","useEffect","fetchTrandMovies","then","data","results","catch","error","toast","message","finally","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","map","KEY","axios","fetchMovie","query","fetchMovieByID","fetchMovieRewies","fetchCast"],"sourceRoot":""}