{"version":3,"file":"static/js/149.b9317532.chunk.js","mappings":"2LAEe,SAASA,EAAT,GAA6D,IAAvCC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,eAAgBC,EAAQ,EAARA,KACjE,OACE,yBACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMN,GAA1C,SACGE,GAAkBC,OAK5B,C,2GCZc,SAASI,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OACE,kBAAMA,SAAUA,EAAhB,WACE,kBAAOC,KAAK,OAAON,KAAK,iBACxB,mBAAQM,KAAK,SAAb,SAAsB,aAG3B,C,yDCCc,SAASC,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMlB,GAAWmB,EAAAA,EAAAA,MACXC,EAAW,UAAGR,EAAaS,IAAI,gBAApB,QAAgC,GAgCjD,OAnBAC,EAAAA,EAAAA,YAAU,WAER,GADAJ,GAAa,IACRE,EAGH,OAFAF,GAAa,QACbF,EAAU,OAIZO,EAAAA,EAAAA,IAAWH,GACRI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,GAA4B,IAAxBA,EAAKC,QAAQC,OACf,OAAOC,EAAAA,GAAAA,KAAA,uCAA2CR,IAEpDJ,GAAU,OAAIS,EAAKC,SACpB,IACAG,OAAM,SAAAC,GAAK,OAAIF,EAAAA,GAAAA,MAAYE,EAAMC,QAAtB,IACXC,QAAQd,GAAa,GACzB,GAAE,CAACE,KAGF,iCACE,SAACb,EAAD,CAAYC,SAhCC,SAAAyB,GACfA,EAAIC,iBACJ,IAAMC,EAAaF,EAAIG,OAAOC,SAASjB,YAAYkB,MACnD,IAAKH,EACH,OAAOP,EAAAA,GAAAA,KAAW,2BAGpBf,EAD6B,KAAfsB,EAAoB,CAAEI,MAAOJ,GAAe,CAAC,GAE3DF,EAAIG,OAAOC,SAASjB,YAAYkB,MAAQ,EACzC,IAwBIrB,IACC,SAAC,KAAD,CACEuB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,IAIZhC,GACCA,EAAOiC,KAAI,YAAmC,IAAhC/C,EAA+B,EAA/BA,GAAIE,EAA2B,EAA3BA,KAAMD,EAAqB,EAArBA,eACtB,OACE,SAACH,EAAA,EAAD,CAEEC,SAAUA,EACVC,GAAIA,EACJC,eAAgBA,EAChBC,KAAMA,GAJDF,EAOV,MAGR,C,mKCzEKgD,EAAM,mCACZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAmB,WACvB,OAAOD,EAAAA,EAAAA,IAAA,oCAAuCD,GAC/C,EAEK1B,EAAa,SAAAgB,GACjB,OAAOW,EAAAA,EAAAA,IAAA,6BACiBX,EADjB,8DAC4EU,GAEpF,EAEKG,EAAiB,SAAAnD,GACrB,OAAOiD,EAAAA,EAAAA,IAAA,gBAAmBjD,EAAnB,mCAAgDgD,GACxD,EAMKI,EAAmB,SAAApD,GACvB,OAAOiD,EAAAA,EAAAA,IAAA,gBAAmBjD,EAAnB,kDAA+DgD,GACvE,EAEKK,EAAY,SAAArD,GAChB,OAAOiD,EAAAA,EAAAA,IAAA,gBAAmBjD,EAAnB,2CAAwDgD,GAChE,C","sources":["components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function MoviesList({ location, id, original_title, name }) {\n  return (\n    <ul>\n      <li>\n        <Link to={`/movies/${id}`} state={{ from: location }}>\n          {original_title || name}\n        </Link>\n      </li>\n    </ul>\n  );\n}\n","export default function SearchForm({ onSubmit }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"queryString\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovie } from 'services/API';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const queryString = searchParams.get('query') ?? '';\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const nextParams = evt.target.elements.queryString.value;\n    if (!nextParams) {\n      return toast.warn('Plase, enter film name!');\n    }\n    const query = nextParams !== '' ? { query: nextParams } : {};\n    setSearchParams(query);\n    evt.target.elements.queryString.value = '';\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (!queryString) {\n      setIsLoading(false);\n      setMovies(null);\n      return;\n    }\n\n    fetchMovie(queryString)\n      .then(({ data }) => {\n        if (data.results.length === 0) {\n          return toast.warn(`There is no films with name  ${queryString}`);\n        }\n        setMovies([...data.results]);\n      })\n      .catch(error => toast.error(error.message))\n      .finally(setIsLoading(false));\n  }, [queryString]);\n\n  return (\n    <>\n      <SearchForm onSubmit={onSubmit} />\n      {isLoading && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"#4fa94d\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n\n      {movies &&\n        movies.map(({ id, name, original_title }) => {\n          return (\n            <MoviesList\n              key={id}\n              location={location}\n              id={id}\n              original_title={original_title}\n              name={name}\n            />\n          );\n        })}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '1676e9bd6d1e52f74048e3da15b70e63';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrandMovies = () => {\n  return axios.get(`/trending/all/day?api_key=${KEY}`);\n};\n\nconst fetchMovie = query => {\n  return axios.get(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1&api_key=${KEY}`\n  );\n};\n\nconst fetchMovieByID = id => {\n  return axios.get(`movie/${id}?language=en-US&api_key=${KEY}`);\n};\n\nconst fetchMovieCredits = id => {\n  return axios.get(`/movie/${id}/credits?language=en-US&api_key=${KEY}`);\n};\n\nconst fetchMovieRewies = id => {\n  return axios.get(`movie/${id}/reviews?language=en-US&page=1&api_key=${KEY}`);\n};\n\nconst fetchCast = id => {\n  return axios.get(`movie/${id}/credits?language=en-US&api_key=${KEY}`);\n};\n\nexport {\n  fetchTrandMovies,\n  fetchMovie,\n  fetchMovieByID,\n  fetchMovieCredits,\n  fetchMovieRewies,\n  fetchCast,\n};\n"],"names":["MoviesList","location","id","original_title","name","to","state","from","SearchForm","onSubmit","type","Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","isLoading","setIsLoading","useLocation","queryString","get","useEffect","fetchMovie","then","data","results","length","toast","catch","error","message","finally","evt","preventDefault","nextParams","target","elements","value","query","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","map","KEY","axios","fetchTrandMovies","fetchMovieByID","fetchMovieRewies","fetchCast"],"sourceRoot":""}